
interface SchemaObject{
    readonly $id?: string;
    readonly $schema?: string;
    readonly $ref?: string;
    readonly title?: string;
    readonly description?: string;
    readonly default?: {};
    readonly multipleOf?: number;
    readonly maximum?: number;
    readonly exclusiveMaximum?: number;
    readonly minimum?: number;
    readonly exclusiveMinimum?: number;
    readonly maxLength?: any;
    readonly minLength?: any;
    readonly pattern?: string;
    readonly additionalItems?: SchemaObject;
    readonly items?: SchemaObject|any;
    readonly maxItems?: any;
    readonly minItems?: any;
    readonly uniqueItems?: boolean;
    readonly contains?: SchemaObject;
    readonly maxProperties?: any;
    readonly minProperties?: any;
    readonly required?: any;
    readonly additionalProperties?: SchemaObject;
    readonly definitions?: {readonly[_:string]:SchemaObject;};
    readonly properties?: {readonly[_:string]:SchemaObject;};
    readonly patternProperties?: {readonly[_:string]:SchemaObject;};
    readonly dependencies?: {readonly[_:string]:SchemaObject|any;};
    readonly propertyNames?: SchemaObject;
    readonly const?: {};
    readonly enum?: any[];
    readonly type?: any|any[];
    readonly format?: string;
    readonly allOf?: any;
    readonly anyOf?: any;
    readonly oneOf?: any;
    readonly not?: SchemaObject;
}